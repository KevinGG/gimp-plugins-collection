diff -r -c gmic-qt/src/gmic_qt.cpp gmic-qt-new/src/gmic_qt.cpp
*** gmic-qt/src/gmic_qt.cpp	Sun Oct 14 12:36:05 2018
--- gmic-qt-new/src/gmic_qt.cpp	Mon Oct 15 22:21:14 2018
***************
*** 43,48 ****
--- 43,51 ----
  #include "Widgets/LanguageSelectionWidget.h"
  #include "Widgets/ProgressInfoWindow.h"
  #include "gmic.h"
+ #include <stdlib.h>
+ #include <libgen.h>
+ #include <mach-o/dyld.h>
  
  namespace GmicQt
  {
***************
*** 68,73 ****
--- 71,104 ----
    SetErrorMode(SEM_FAILCRITICALERRORS | SEM_NOGPFAULTERRORBOX | SEM_NOOPENFILEERRORBOX);
  #endif
  
+   QString appDir;
+   {
+     char exname[2048] = {0};
+     // get the path where the executable is stored
+     uint32_t size = sizeof(exname);
+     if (_NSGetExecutablePath(exname, &size) == 0) {
+       printf("executable path is %s\n", exname);
+       char* fullexname = realpath(exname,NULL);
+       printf("full executable name is %s\n", fullexname);
+       if( fullexname ) {
+         char* fullpath = dirname(fullexname);
+         printf("full executable path is %s\n", fullpath);
+         if( fullpath ) {
+           char pluginpath[2048] = {0};
+           strncpy( pluginpath, fullpath, 2047);
+           strncat( pluginpath, "GMIC/plugins", 2047);
+           printf("plugins path is %s\n", pluginpath);
+           appDir = pluginpath;
+           //appDir += "GMIC/plugins";
+           printf("QCoreApplication::addLibraryPath(%s)\n", appDir.unicode());
+           QCoreApplication::addLibraryPath(appDir);
+         }
+         free(fullexname);
+       }
+     } else
+       printf("buffer too small; need size %u\n", size);
+   }
+ 
    QApplication app(dummy_argc, dummy_argv);
    app.setWindowIcon(QIcon(":resources/gmic_hat.png"));
    QCoreApplication::setOrganizationName(GMIC_QT_ORGANISATION_NAME);
