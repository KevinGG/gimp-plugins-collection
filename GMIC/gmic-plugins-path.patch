diff -r -c gmic-qt/src/gmic_qt.cpp gmic-qt-new/src/gmic_qt.cpp
*** gmic-qt/src/gmic_qt.cpp	Sun Oct 14 12:36:05 2018
--- gmic-qt-new/src/gmic_qt.cpp	Tue Oct 16 11:10:29 2018
***************
*** 43,48 ****
--- 43,51 ----
  #include "Widgets/LanguageSelectionWidget.h"
  #include "Widgets/ProgressInfoWindow.h"
  #include "gmic.h"
+ #include <stdlib.h>
+ #include <libgen.h>
+ #include <mach-o/dyld.h>
  
  namespace GmicQt
  {
***************
*** 62,74 ****
    TIMING;
    int dummy_argc = 1;
    char dummy_app_name[] = GMIC_QT_APPLICATION_NAME;
-   char * dummy_argv[1] = {dummy_app_name};
- 
  #ifdef _IS_WINDOWS_
    SetErrorMode(SEM_FAILCRITICALERRORS | SEM_NOGPFAULTERRORBOX | SEM_NOOPENFILEERRORBOX);
  #endif
  
    QApplication app(dummy_argc, dummy_argv);
    app.setWindowIcon(QIcon(":resources/gmic_hat.png"));
    QCoreApplication::setOrganizationName(GMIC_QT_ORGANISATION_NAME);
    QCoreApplication::setOrganizationDomain(GMIC_QT_ORGANISATION_DOMAIN);
--- 65,107 ----
    TIMING;
    int dummy_argc = 1;
    char dummy_app_name[] = GMIC_QT_APPLICATION_NAME;
  #ifdef _IS_WINDOWS_
    SetErrorMode(SEM_FAILCRITICALERRORS | SEM_NOGPFAULTERRORBOX | SEM_NOOPENFILEERRORBOX);
  #endif
  
+   char* fullexname;
+   {
+     char exname[2048] = {0};
+     // get the path where the executable is stored
+     uint32_t size = sizeof(exname);
+     if (_NSGetExecutablePath(exname, &size) == 0) {
+       printf("executable path is %s\n", exname);
+       fullexname = realpath(exname,NULL);
+       printf("full executable name is %s\n", fullexname);
+       if( fullexname ) {
+         char* fullpath = dirname(fullexname);
+         printf("full executable path is %s\n", fullpath);
+         if( fullpath ) {
+           char pluginpath[2048] = {0};
+           strncpy( pluginpath, fullpath, 2047);
+           strncat( pluginpath, "/GMIC/plugins/:", 2047);
+           char* envpath = getenv("QT_PLUGIN_PATH");
+           if( envpath ) strncat( pluginpath, envpath, 2047);
+           printf("plugins path is %s\n", pluginpath);
+           setenv("QT_PLUGIN_PATH", pluginpath, 1);
+         }
+       }
+     } else
+       printf("buffer too small; need size %u\n", size);
+ 
+     setenv("QT_DEBUG_PLUGINS", "1");
+   }
+ 
+   if( !fullexname ) fullexname = dummy_app_name;
+   char * dummy_argv[1] = {fullexname};
+ 
    QApplication app(dummy_argc, dummy_argv);
+ 
    app.setWindowIcon(QIcon(":resources/gmic_hat.png"));
    QCoreApplication::setOrganizationName(GMIC_QT_ORGANISATION_NAME);
    QCoreApplication::setOrganizationDomain(GMIC_QT_ORGANISATION_DOMAIN);
